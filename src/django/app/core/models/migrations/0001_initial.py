# Generated by Django 5.1.6 on 2025-03-06 07:42

import django.db.models.deletion
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='City',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, help_text="City's unique identifier.", unique=True)),
                ('name', models.CharField(help_text="City's name.", max_length=255)),
                ('country', models.CharField(help_text='Holding country.', max_length=255)),
                ('region', models.CharField(help_text='Holding region.', max_length=255)),
                ('timezone', models.CharField(help_text="City's timezone.", max_length=255)),
                ('latitude', models.FloatField(help_text="City's latitude.")),
                ('longitude', models.FloatField(help_text="City's longitude.")),
                ('deleted', models.BooleanField(default=False, help_text='Soft delete flag.')),
                ('deleted_at', models.DateTimeField(blank=True, help_text='The times that a resource was soft deleted.', null=True)),
                ('purge_at', models.DateTimeField(blank=True, help_text='The time when a soft deleted resource will be purged from the system.', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Creation timestamp.')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Update timestamp.')),
            ],
            options={
                'verbose_name_plural': 'Cities',
                'db_table': 'weather_city',
            },
        ),
        migrations.CreateModel(
            name='WeatherForecast',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(help_text='Forecast date.')),
                ('rain_sum_mm', models.DecimalField(decimal_places=1, default=0, help_text='Sum of daily rain in mm.', max_digits=4)),
                ('showers_sum_mm', models.DecimalField(decimal_places=1, default=0, help_text='Sum of daily showers in mm.', max_digits=4)),
                ('snowfall_sum_cm', models.DecimalField(decimal_places=1, default=0, help_text='Sum of daily snowfall in cm.', max_digits=4)),
                ('sunrise_iso8601', models.DateTimeField(help_text='Sunrise time iso8601 formatted.')),
                ('sunset_iso8601', models.DateTimeField(help_text='Sunset time iso8601 formatted.')),
                ('temperature_max_celsius', models.DecimalField(decimal_places=1, default=0, help_text='Max temperature at 2m in Celsius.', max_digits=3)),
                ('temperature_min_celsius', models.DecimalField(decimal_places=1, default=0, help_text='Min temperature at 2m in Celsius.', max_digits=3)),
                ('uv_index_max', models.DecimalField(decimal_places=2, default=0, help_text='UV index daily maximum.', max_digits=3)),
                ('wind_speed_max_kmh', models.DecimalField(decimal_places=1, default=0, help_text='Maximum wind speed and gusts on a day at 10m in kmh.', max_digits=4)),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Creation timestamp.')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Update timestamp.')),
                ('city', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='forecast', to='core.city')),
            ],
            options={
                'verbose_name_plural': 'Weather Forecasts',
                'db_table': 'weather_forecast',
                'ordering': ['date'],
            },
        ),
        migrations.CreateModel(
            name='WeatherHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(help_text='Weather at this date.')),
                ('rain_sum_mm', models.DecimalField(decimal_places=1, default=0, help_text='Sum of daily rain in mm.', max_digits=4)),
                ('snowfall_sum_cm', models.DecimalField(decimal_places=1, default=0, help_text='Sum of daily snowfall in cm.', max_digits=4)),
                ('sunrise_iso8601', models.DateTimeField(help_text='Sunrise time iso8601 formatted.')),
                ('sunset_iso8601', models.DateTimeField(help_text='Sunset time iso8601 formatted.')),
                ('temperature_max_celsius', models.DecimalField(decimal_places=1, default=0, help_text='Max temperature at 2m in Celsius.', max_digits=3)),
                ('temperature_min_celsius', models.DecimalField(decimal_places=1, default=0, help_text='Min temperature at 2m in Celsius.', max_digits=3)),
                ('wind_speed_max_kmh', models.DecimalField(decimal_places=1, default=0, help_text='Maximum wind speed and gusts on a day at 10m in kmh.', max_digits=4)),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Creation timestamp.')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Update timestamp.')),
                ('city', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='history', to='core.city')),
            ],
            options={
                'verbose_name_plural': 'Weather History',
                'db_table': 'weather_history',
            },
        ),
    ]
